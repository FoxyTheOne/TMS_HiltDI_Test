plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    // Hilt
    id 'dagger.hilt.android.plugin'
}

// API KEY -> Вытягиваем все значения из файла local.properties в переменную localProperties (сохраняется в виде Map)
def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.myproject.hiltdi"
        minSdk 19
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        // API KEY -> Для полученных значений создаём buildConfigField. 1 - Тип нашего поля, 2 - Ключ, 3 - Значение (вытягиваем необходимое из Map localProperties)
        buildConfigField("String", "OPEN_WEATHER_MAP_API_KEY", localProperties["OPEN_WEATHER_API_KEY"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    // Room
    implementation "androidx.room:room-runtime:2.4.1"
    kapt "androidx.room:room-compiler:2.4.1"
    implementation "androidx.room:room-ktx:2.4.1"

    // Retrofit & OkHttp
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // For activityViewModels working:
    // Java language implementation
    implementation "androidx.fragment:fragment-ktx:1.4.0"
    // Kotlin
    implementation "androidx.fragment:fragment-ktx:1.4.0"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:1.4.0"

    // Location
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"

    //  Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
}

kapt {
    correctErrorTypes = true // Дополнит. настройка, чтобы hilt показывал корректные сообщения об ошибке во время компиляции
}